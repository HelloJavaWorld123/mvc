<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <!-- web.xml中shiro的filter对应的bean -->
    <!-- Shiro 的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
        <!--<property name="loginUrl" value="/login/login"/>-->
        <!--&lt;!&ndash; 认证成功统一跳转到first.action，建议不配置，shiro认证成功自动到上一个请求路径 &ndash;&gt;-->
        <!--<property name="successUrl" value="/success"/>-->
        <!--&lt;!&ndash; 通过unauthorizedUrl指定没有权限操作时跳转页面&ndash;&gt;-->
        <property name="unauthorizedUrl" value="/error/page404"/>
        <property name="filters">
            <map>
                <entry key="anyRoles">
                    <bean class="com.jzy.api.filter.RolesAuthorizationFilter" />
                </entry>
                <entry key="permissions">
                    <bean class="com.jzy.api.filter.UrlPermissionsFilter" />
                </entry>
            </map>
        </property>
        <!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
        <property name="filterChainDefinitions">
            <value>
                /logout = logout
                /ali/* = anon
                /wx/* = anon
                /pay/* = anon
                /sup/* = anon
                /login/managerLogin = anon
                /test/* = permissions[/test/*]
                /** = authc
            </value>
        </property>
    </bean>


    <bean id="rolesAuthorizationFilter" class="com.jzy.api.filter.RolesAuthorizationFilter" />
    <bean id="urlPermissionsFilter" class="com.jzy.api.filter.UrlPermissionsFilter" />

    <!-- securityManager安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myRealm"/>
        <!-- 注入缓存管理器 -->
        <property name="cacheManager" ref="cacheManager"/>
        <!-- 注入session管理器 -->
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- realm -->
    <bean id="myRealm" class="com.jzy.api.base.MyRealm">
        <!-- 将凭证匹配器设置到realm中，realm按照凭证匹配器的要求进行散列 -->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="1"/>
    </bean>

    <!--&lt;!&ndash; 缓存管理器 &ndash;&gt;-->
    <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- session的失效时长，单位毫秒 -->
        <property name="globalSessionTimeout" value="600000"/>
        <!-- 删除失效的session -->
        <property name="deleteInvalidSessions" value="true"/>
    </bean>

    <!-- 开启shiro注解支持 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>